/**
 * Definition of TreeNode:
 * class TreeNode {
 * public:
 *     int val;
 *     TreeNode *left, *right;
 *     TreeNode(int val) {
 *         this->val = val;
 *         this->left = this->right = NULL;
 *     }
 * }
 */
 vector<int> postorderTraversal(TreeNode *root) {
    // write your code here
    vector<int> result;
    if (root == NULL) return result;
      
    stack<TreeNode*> s;
    s.push(root);
        
    while (!s.empty()) {
        TreeNode* node = s.top();
        s.pop();
        if (node->left == NULL && node->right == NULL) {
            result.push_back(node->val);
        }
        else if (!s.empty() && s.top() == node) {
            result.push_back(node->val);
            s.pop();
        }
        else {
            s.push(node);
            s.push(node);
            if (node->right != NULL) {
                s.push(node->right);
            }
            if (node->left != NULL){
            s.push(node->left);
            }
        }
    }
    return result;
}
